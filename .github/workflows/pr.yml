name: PR

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubicloud-standard-8
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt -y install protobuf-compiler

          # Install rust
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build cedana-image-streamer
        run: |
          cargo build --release --bin cedana-image-streamer
          ls_out=$(ls -l target/release/cedana-image-streamer)
          echo "ls -l target/release/cedana-image-streamer"
          echo $ls_out
      - name: Upload cedana-image-streamer artifact
        uses: actions/upload-artifact@v4
        with:
          name: cedana-image-streamer
          path: target/release/cedana-image-streamer

  regression-test:
    name: Regression tests
    runs-on: ubicloud-standard-8
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download cedana-image-streamer artifact
        uses: actions/download-artifact@v4
        with:
          name: cedana-image-streamer
      - name: Add cedana-image-streamer to $PATH
        run: |
          chmod +x cedana-image-streamer
          sudo cp cedana-image-streamer /usr/bin/
          whereiscedanaimagestreamer=$(whereis cedana-image-streamer)
          echo "installed cedana-image-streamer at $whereiscedanaimagestreamer"
          echo "ls -l /usr/local/cedana-image-streamer = $(ls -l /usr/local/cedana-image-streamer)"
          echo "PATH = $PATH"
      - name: Install dependencies
        run: |
          # Install bats
          git clone https://github.com/bats-core/bats-core.git
          pushd bats-core
          sudo -E ./install.sh /usr/local
          whereisbats=$(whereis bats)
          echo "installed bats at $whereisbats"
          popd && rm -rf bats-core
      - name: Download binaries
        env:
          CLOUDSMITH_ENTITLEMENT_TOKEN_CRIU: ${{ secrets.CLOUDSMITH_ENTITLEMENT_TOKEN_CRIU }}
        run: |
          TAG=latest
          # Install CRIU
          sudo apt-get install libnet1 libprotobuf-c1
          curl -1sLf -O https://dl.cloudsmith.io/$CLOUDSMITH_ENTITLEMENT_TOKEN_CRIU/cedana/criu/raw/versions/$TAG/criu
          chmod +x criu
          sudo cp criu /usr/local/sbin/
          whereiscriu=$(whereis criu)
          echo "installed criu at $whereiscriu"
          echo "> criu --version\n$(criu --version)"
      - name: Build cedana daemon
        run: |
          # Install dependencies
          sudo apt update
          sudo apt install libgpgme-dev libseccomp-dev libbtrfs-dev pkg-config
          wget https://go.dev/dl/go1.22.0.linux-amd64.tar.gz
          sudo tar -C /usr/local -xvzf go1.22.0.linux-amd64.tar.gz
          export PATH=$PATH:/usr/local/go/bin
          go version

          # Install cedana daemon
          BRANCH="feature/ced-815-fix-cedana-image-streamer-breaking-due-to-moving-gpu-restore"
          git clone https://github.com/cedana/cedana.git
          pushd cedana
          git checkout $BRANCH
          go build
          sudo cp cedana /usr/bin/
          popd
          export CEDANA_CLI_WAIT_FOR_READY=true
          #- name: Setup tmate session
          #  uses: mxschmitt/action-tmate@v3
      - name: Run regression tests
        env:
          CEDANA_URL: ${{ secrets.CEDANA_URL }}
          CEDANA_API_KEY: ${{ secrets.CEDANA_API_KEY }}
        run: |
          echo "pwd = $PWD"
          echo "ls -l = $(ls -l)"
          sudo -E make -C scripts/ci regression
          echo "ls -l /var/log = $(ls -l /var/log)"
      - name: Check existence of bats logs
        if: always()
        run: |
          echo "ls -l ~/bats_out: $(ls -l ~/bats_out)"
      - name: Upload bats logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bats_logs
          path: ~/bats_out
